{
	"data":[
    {
      "question": "What is a closure in JavaScript?",
      "answer": "A closure is a function that has access to its own scope, the outer function's scope, and the global scope.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of Promises in Node.js.",
      "answer": "Promises are objects used for asynchronous computations. They represent the eventual completion (or failure) of an asynchronous operation and its resulting value.",
      "skill": "Node Js",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are the key differences between JavaScript and TypeScript?",
      "answer": "TypeScript is a superset of JavaScript that adds static typing, interfaces, and other features to enhance developer productivity and code quality.",
      "skill": "TypeScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the virtual DOM in React.",
      "answer": "The virtual DOM is a lightweight copy of the actual DOM, and React uses it to perform efficient updates to the real DOM by minimizing direct manipulations.",
      "skill": "React",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are the different types of CSS selectors?",
      "answer": "CSS selectors include element selectors, class selectors, ID selectors, attribute selectors, and more.",
      "skill": "CSS",
      "difficulty": "Easy",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of serverless computing and how it works with AWS Lambda.",
      "answer": "Serverless computing allows developers to run code without managing servers. AWS Lambda is an example of a serverless compute service where you can upload your code and AWS handles the rest, scaling and managing the infrastructure for you.",
      "skill": "AWS",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is MongoDB and how does it differ from traditional relational databases?",
      "answer": "MongoDB is a NoSQL database that stores data in JSON-like documents and offers high scalability and flexibility compared to traditional relational databases.",
      "skill": "MongoDB",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "What is the difference between 'let', 'const', and 'var' in JavaScript?",
      "answer": "Both 'let' and 'const' are block-scoped declarations, while 'var' is function-scoped. 'let' allows reassignment, whereas 'const' creates a constant that cannot be reassigned.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain how to handle errors in Node.js using try-catch blocks.",
      "answer": "In Node.js, you can use try-catch blocks to handle synchronous errors. If an error occurs inside the 'try' block, the control jumps to the 'catch' block, allowing you to handle the error gracefully.",
      "skill": "Node Js",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is a tuple in TypeScript?",
      "answer": "In TypeScript, a tuple is an array with a fixed number of elements, each of which may have a different data type. Tuples are used when the order of elements is important.",
      "skill": "TypeScript",
      "difficulty": "Easy",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is React JSX and how does it differ from HTML?",
      "answer": "JSX is a syntax extension for JavaScript used in React to describe the user interface. It resembles HTML but allows you to write HTML-like structures in JavaScript code.",
      "skill": "React",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you center an element horizontally in CSS?",
      "answer": "To center an element horizontally in CSS, you can set its 'margin-left' and 'margin-right' properties to 'auto', provided that the element has a defined width.",
      "skill": "CSS",
      "difficulty": "Easy",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of AWS S3 and how it is used for storing data.",
      "answer": "Amazon S3 (Simple Storage Service) is a scalable object storage service that allows you to store and retrieve data. It provides high availability, durability, and security for your data.",
      "skill": "AWS",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is the primary purpose of MongoDB's ObjectId?",
      "answer": "The ObjectId is a unique identifier generated by MongoDB for each document in a collection. It is used as the document's primary key and ensures its uniqueness.",
      "skill": "MongoDB",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain event delegation in JavaScript.",
      "answer": "Event delegation is a technique in which you attach a single event handler to a parent element to manage events for all its child elements. This reduces memory usage and improves performance.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "What is a callback function in JavaScript?",
      "answer": "A callback function is a function that is passed as an argument to another function and is executed after the completion of that function.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you handle asynchronous operations in Node.js?",
      "answer": "In Node.js, you can handle asynchronous operations using callbacks, Promises, or async/await syntax.",
      "skill": "Node Js",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of interfaces in TypeScript.",
      "answer": "Interfaces in TypeScript are used to define the structure of objects. They act as a contract, ensuring that objects conform to a specific shape.",
      "skill": "TypeScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is React Router, and how does it enable client-side routing?",
      "answer": "React Router is a library that provides navigation and routing functionality for React applications. It enables client-side routing by managing the URL and rendering the appropriate components based on the URL.",
      "skill": "React",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you create a CSS grid layout?",
      "answer": "To create a CSS grid layout, you can use the 'display: grid' property on a container and define rows and columns using 'grid-template-rows' and 'grid-template-columns' properties.",
      "skill": "CSS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of Auto Scaling in AWS.",
      "answer": "Auto Scaling in AWS automatically adjusts the number of instances in a group to maintain performance and cost-efficiency based on defined policies or metrics.",
      "skill": "AWS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you perform aggregation in MongoDB?",
      "answer": "In MongoDB, aggregation is performed using the aggregation pipeline, which consists of multiple stages like $match, $group, $project, and more to process and transform documents.",
      "skill": "MongoDB",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are JavaScript closures used for?",
      "answer": "Closures in JavaScript are used to create private variables, encapsulate functionality, and implement data hiding.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "What is the 'this' keyword in JavaScript, and how does it behave in different contexts?",
      "answer": "In JavaScript, the 'this' keyword refers to the context in which a function is executed. Its value depends on how the function is called: global context, object method context, constructor context, or using call/apply/bind methods.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the event loop in Node.js.",
      "answer": "The event loop in Node.js is a mechanism that allows non-blocking, asynchronous processing of tasks. It ensures that I/O operations do not block the execution of other code, making Node.js highly scalable.",
      "skill": "Node Js",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are decorators in TypeScript and how are they used?",
      "answer": "Decorators are a TypeScript feature used to modify classes, methods, properties, or parameters at the declaration time. They are prefixed with '@' and can be used for various purposes like logging, validation, etc.",
      "skill": "TypeScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of React components and their types.",
      "answer": "React components are reusable building blocks for UI elements. They can be functional components (stateless) or class components (stateful) depending on whether they manage state or not.",
      "skill": "React",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you vertically align text within a div using CSS?",
      "answer": "To vertically align text within a div using CSS, you can use the 'display: flex' property on the container and 'align-items: center' to center the content vertically.",
      "skill": "CSS",
      "difficulty": "Easy",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is AWS Lambda, and how is it used for serverless computing?",
      "answer": "AWS Lambda is a serverless compute service that runs your code in response to events. It allows you to execute code without managing servers, making it ideal for serverless computing architectures.",
      "skill": "AWS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of indexing in MongoDB.",
      "answer": "Indexing in MongoDB is a way to optimize query performance by creating data structures that allow the database to locate and access documents more efficiently.",
      "skill": "MongoDB",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is the difference between arrow functions and regular functions in JavaScript?",
      "answer": "Arrow functions in JavaScript have a concise syntax and inherit 'this' from the surrounding code, while regular functions have their own 'this' value, which can change based on how the function is called.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "What is the difference between 'null' and 'undefined' in JavaScript?",
      "answer": "'null' is a value that represents the intentional absence of an object value, while 'undefined' is a type that represents the absence of a value. Variables that are declared but not initialized have an 'undefined' value.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the purpose of the 'module.exports' object in Node.js.",
      "answer": "'module.exports' is used in Node.js to define the public interface of a module. It allows you to expose specific functions or objects that can be accessed by other modules using 'require'.",
      "skill": "Node Js",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are generics in TypeScript, and how are they useful?",
      "answer": "Generics in TypeScript allow you to create reusable components that can work with a variety of data types. They provide flexibility and type safety in functions and classes.",
      "skill": "TypeScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of React hooks and their advantages.",
      "answer": "React hooks are functions that allow you to use state and other React features in functional components. They simplify code and avoid the need for class components.",
      "skill": "React",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you create a responsive design using CSS media queries?",
      "answer": "CSS media queries allow you to apply different styles based on the device's screen size or other characteristics, enabling you to create responsive layouts that adapt to various devices.",
      "skill": "CSS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the different storage classes in Amazon S3.",
      "answer": "Amazon S3 provides several storage classes like 'Standard', 'Intelligent-Tiering', 'Glacier', and more. Each class offers different durability, availability, and cost attributes to suit various use cases.",
      "skill": "AWS",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you perform data aggregation using the MongoDB aggregation pipeline?",
      "answer": "The MongoDB aggregation pipeline allows you to process data and perform operations like filtering, grouping, sorting, and calculating aggregate values based on various stages in the pipeline.",
      "skill": "MongoDB",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are the differences between 'call', 'apply', and 'bind' methods in JavaScript?",
      "answer": "'call' and 'apply' allow you to invoke a function with a specified 'this' context and arguments. 'bind' returns a new function with the bound 'this' context, which can be executed later.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "Explain the concept of prototypal inheritance in JavaScript.",
      "answer": "Prototypal inheritance is a mechanism in JavaScript where objects can inherit properties and methods from other objects through their prototype chain. It allows for code reuse and object relationships.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is the Event Loop in JavaScript, and how does it handle asynchronous operations?",
      "answer": "The Event Loop in JavaScript is a mechanism that handles asynchronous operations by continuously checking the message queue and executing callback functions when the call stack is empty. It ensures non-blocking I/O operations.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of middleware in Node.js.",
      "answer": "Middleware in Node.js refers to functions that have access to the request and response objects in the Express.js framework. They can modify the request/response or execute additional code before the final route handler is invoked.",
      "skill": "Node Js",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you define default prop values in React?",
      "answer": "In React, you can use the 'defaultProps' property of a component to define default values for its props. If a prop is not provided by the parent component, the default value will be used.",
      "skill": "React",
      "difficulty": "Easy",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the CSS box model and its components.",
      "answer": "The CSS box model is a layout concept that represents each element as a rectangular box. It consists of the content area, padding, border, and margin.",
      "skill": "CSS",
      "difficulty": "Easy",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are Amazon DynamoDB Streams, and how are they used?",
      "answer": "DynamoDB Streams in AWS are time-ordered logs of changes to items in a DynamoDB table. They can be used to capture changes and trigger other AWS services, like Lambda functions.",
      "skill": "AWS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the process of data sharding in MongoDB.",
      "answer": "Data sharding in MongoDB involves distributing data across multiple servers (shards) to improve scalability and performance. It is achieved through horizontal partitioning of data based on a shard key.",
      "skill": "MongoDB",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are closures in JavaScript, and how can you use them effectively?",
      "answer": "Closures in JavaScript are functions that retain access to their lexical scope even after their parent functions have finished executing. They are useful for encapsulation, creating private variables, and maintaining state.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "Explain the difference between '== and '===' operators in JavaScript.",
      "answer": "In JavaScript, '==' is the equality operator that checks if two values are equal, performing type coercion if necessary. '===' is the strict equality operator that checks if two values are equal without type coercion, requiring both value and type to match.",
      "skill": "JavaScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you handle file uploads in Node.js using Express?",
      "answer": "In Express, you can handle file uploads using middleware like 'multer'. Multer allows you to handle multipart/form-data and provides easy access to uploaded files.",
      "skill": "Node Js",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are namespaces in TypeScript, and how are they used?",
      "answer": "Namespaces in TypeScript are used to organize code into logical containers to avoid naming conflicts. They help in managing large codebases and can be declared using the 'namespace' keyword.",
      "skill": "TypeScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is the role of React context, and when should you use it?",
      "answer": "React context is used for passing data down the component tree without the need to pass props explicitly at each level. It is beneficial when data needs to be accessible by multiple components at different nesting levels.",
      "skill": "React",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you create a CSS flexbox layout?",
      "answer": "To create a CSS flexbox layout, set the 'display' property of the container to 'flex', and use properties like 'flex-direction', 'justify-content', and 'align-items' to control the layout of flex items.",
      "skill": "CSS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the concept of serverless databases with AWS DynamoDB.",
      "answer": "In AWS, serverless databases like DynamoDB automatically handle the underlying infrastructure, scaling, and maintenance. Developers can focus on building applications without managing the database servers.",
      "skill": "AWS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is MongoDB's ObjectId, and how is it generated?",
      "answer": "MongoDB's ObjectId is a unique identifier for documents in a collection. It consists of a 12-byte hexadecimal value, including a timestamp, machine identifier, process identifier, and a random number.",
      "skill": "MongoDB",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How does lexical scoping work in JavaScript?",
      "answer": "Lexical scoping in JavaScript means that the variable scope is determined by its position within the source code. When a function is defined, it captures its surrounding scope's variables, allowing access to them even when the function is executed elsewhere.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },{
      "question": "What is hoisting in JavaScript?",
      "answer": "Hoisting is a JavaScript behavior where variable and function declarations are moved to the top of their containing scope during the compilation phase. However, only the declarations are hoisted, not the assignments.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the purpose of the 'Buffer' class in Node.js.",
      "answer": "The 'Buffer' class in Node.js is used to handle binary data, especially when interacting with TCP streams, file system operations, or other binary data manipulations.",
      "skill": "Node Js",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you use decorators in TypeScript to add functionality to a class?",
      "answer": "In TypeScript, you can use decorators to modify class declarations or their members. By applying a decorator to a class or its member, you can add or modify behavior before or after the class is instantiated or its members are accessed.",
      "skill": "TypeScript",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is React state, and how is it different from props?",
      "answer": "In React, state is used to manage data that can change over time and affects the component's rendering. Props are immutable data passed from parent components to child components to configure them.",
      "skill": "React",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "How can you create a sticky footer in CSS?",
      "answer": "To create a sticky footer in CSS, you can use flexbox or grid layout. By setting the 'min-height: 100vh' on the container and applying 'flex: 1' or 'grid-template-rows: 1fr auto', you can make the footer stick to the bottom of the page when there is little content.",
      "skill": "CSS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What is AWS API Gateway, and how does it work?",
      "answer": "AWS API Gateway is a fully managed service that makes it easy to create, publish, maintain, monitor, and secure APIs at any scale. It acts as a front-door for applications to access data, business logic, or functionality from backend services or Lambda functions.",
      "skill": "AWS",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "Explain the process of data modeling in MongoDB.",
      "answer": "Data modeling in MongoDB involves designing the structure of your documents and deciding how to represent relationships between data. It is essential to optimize queries and ensure efficient data access.",
      "skill": "MongoDB",
      "difficulty": "Hard",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    },
    {
      "question": "What are the benefits of using arrow functions in JavaScript?",
      "answer": "Arrow functions in JavaScript offer concise syntax, lexical scoping of 'this', and do not have their own 'arguments' object. They are especially useful for callbacks and shorter function expressions.",
      "skill": "JavaScript",
      "difficulty": "Medium",
      "creatorID": "64c0c39df9eba472c7d21243",
      "creatorName": "admin"
    }
  ]
  
}
